"""
Django settings for conquermanager project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""
                                                                        ## Todas las líneas de configuración del proyecto.

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent                       ## Base_dir apuntará a la raiz del proyecto.


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-g*#y7+!j$*ode8)9quew5u-k9*m&p7o@#jn%q%p$&&46e@wi%r'   ## Frase aleatoria que se genera para encriptar las contraseñas

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True                                                                        ## Para saber si el servidor de Django al arrancarlo está en modo debug o no.

ALLOWED_HOSTS = []                                                       ## Si queremos que se conecten a nuestra página.
                                                                         ## Colocaremos las urls para darles acceso.

# Application definition

INSTALLED_APPS = [                      ## Aquí indicamos las liberias de terceros que queremos instalar. (default)
    'django.contrib.admin',             # Panel de administración de django
    'django.contrib.auth',              # Sistema de auth de de usuarios de django
    'django.contrib.contenttypes',      # Permitir tipo de contenido de extensiones.
    'django.contrib.sessions',          # MAnejo de sesiones
    'django.contrib.messages',          # Manejo de mensajes
    'django.contrib.staticfiles',       # MAnejo de ficheros estáticos.
    'todos'                             # Hemos añadido nuestra app/model aquí, sino Django no se entera.
]

MIDDLEWARE = [                                              ## Capas por las que pasa una request. Métodos de seg, auth,..
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'conquermanager.urls'                ## Fichero de urls base. El fichero urls.py

TEMPLATES = [                                       ## Array de templates. Indicará donde están mis plantillas.
    {   
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],                                 ## Directorios donde buscar.
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'conquermanager.wsgi.application'        ## Para cuando arranquemos la app.



# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {                       ## Configuración de la bbdd de nuestra aplicación. Por defecto usa sqlite3. Recordar que usa URM
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [                                                                        ## Sistema de validación de password.
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',         # Este comprueba que el pass no contenga el nombre de usuario.
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',                   # Este que tenga un largo mínimo.
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',                  # Que no sean palabras comunes
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',                 # Que contenga valores numéricos
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'             # Internalización.

TIME_ZONE = 'UTC'                   # La hora

USE_I18N = True                     # Si queremos que nuestro projecto se internacionalice.

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'                                     ## Donde están nuestro ficheros estáticos.

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'        ## Tipo de dato que usara para los valores numéricos.
